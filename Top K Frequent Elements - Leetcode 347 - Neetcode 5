class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        HashMap <Integer, Integer> frequencybox = new HashMap<>();
        for (int num : nums) {
            frequencybox.put(num, frequencybox.getOrDefault(num, 0)+1);
        }

        PriorityQueue<int[]> minheap = new PriorityQueue<>((a, b) -> a[0] - b[0]);
        for( Map.Entry<Integer, Integer> entryintoheap : frequencybox.entrySet()) {
            minheap.offer(new int[] {entryintoheap.getValue(), entryintoheap.getKey()});
            if (minheap.size() > k) {
                minheap.poll();
            }
        }

        int[] result = new int[k];
        for (int i = 0; i < k; i++) {
            result[i] = minheap.poll()[1];
        }
        return result;
    }
}
